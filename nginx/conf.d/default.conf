# configure Nginx to cache data
# Define a shared memory zone named "NginxCache" with a size of 20 megabytes
# Set the inactive time for cache entries to 60 minutes
# Configure the directory structure for cache storage with 1 primary level and 2 secondary levels
# Set the maximum size of the cache to 10 unit

# proxy_cache_path /var/cache/nginx
#                     keys_zone=NginxCache:20m
#                     inactive=60m
#                     levels=1:2
#                     max_size=10  s

upstream booking_sys {
    server web:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://booking_sys;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # Enable caching at this location
        # Set the minimum number of requests before caching is activated (default is 1)
        # Specify the HTTP methods that will be cached
        # Set the cache validity for successful responses with status code 200 to 10 minutes (default is 1 minute)
        # Set the cache validity for responses with status code 404 to 5 minutes

        # proxy_cache NginxCache;
        # proxy_cache_min_uses 3;
        # proxy_cache_methods GET;
        # proxy_cache_valid 200 10m;
        # proxy_cache_valid 404 5m;


        # data will be cached even if the response header contains Vary header
        # Vary header is used to tell the cache server that the response is different for different request headers
        # usually Vary is pointed towards Cookie header
        # proxy_ignore_headers Vary;

        # if user is logged in then a cookie named sessionid is generated and data is not cached
        # proxy_cache_bypass $cookie_sessionid;

        # dispaly the cache status in the response header
        # add_header X-Proxy-Cache $upstream_cache_status;

    }

    location /static/ {
        alias /home/app/staticfiles/;
    }

}

